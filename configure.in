dnl Process this file with autoconf to produce a configure script.
dnl
dnl Elite configure.in based on TuxRacer
dnl


AC_INIT(src/elite.h)
AM_INIT_AUTOMAKE(elitegl, "1.0.0")
dnl AM_CONFIG_HEADER(config.h)

dnl Check system type
AC_CANONICAL_HOST

dnl Check for compilers.  We set CFLAGS and CXXFLAGS to null if unset, so
dnl that these macros won't set them to default values that we don't want.
if test "x${CFLAGS-notset}" = "xnotset" ; then
    export CFLAGS
    CFLAGS=""
fi
AC_PROG_CC

if test "x${CXXFLAGS-notset}" = "xnotset" ; then
    export CXXFLAGS
    CXXFLAGS=""
fi
AC_PROG_CXX

dnl Check for ranlib
AC_PROG_RANLIB

dnl Checks for header files.
dnl AC_HEADER_STDC
dnl AC_CHECK_HEADERS(sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
dnl AC_C_CONST
dnl AC_HEADER_TIME

dnl Checks for library functions.
dnl AC_CHECK_FUNCS(getcwd)


dnl --------------------------------------------------------------------------
dnl General options
dnl --------------------------------------------------------------------------
ELITE_CPPFLAGS=""
ELITE_CFLAGS="-O2 -Wall -fomit-frame-pointer -ffast-math -fexpensive-optimizations"
ELITE_CXXFLAGS="-O2 -Wall -fomit-frame-pointer -ffast-math -fexpensive-optimizations"
ELITE_LIBS=""

case "$host" in
i*86-*-*) ELITE_CFLAGS="$ELITE_CFLAGS -malign-loops=2 -malign-jumps=2 -malign-functions=2";
          ELITE_CXXFLAGS="$ELITE_CXXFLAGS -malign-loops=2 -malign-jumps=2 -malign-functions=2";;
alpha*-*-linux-*) ELITE_CFLAGS="$ELITE_CFLAGS -mieee";;
esac

AC_ARG_ENABLE(debug,     [  --enable-debug          Produce an executable with debugging symbols], 
			 [ELITE_CFLAGS="-g -Wall"; ELITE_CXXFLAGS="-g -Wall"],
			 [ELITE_CPPFLAGS="$ELITE_CPPFLAGS -DELITE_NO_ASSERT=1"])

AC_ARG_ENABLE(pedantic,  [  --enable-pedantic       Enable -pedantic (and -ansi for C) when compiling], ELITE_CFLAGS="$ELITE_CFLAGS -ansi -pedantic"; ELITE_CXXFLAGS="$ELITE_CXXFLAGS -pedantic")

AC_ARG_ENABLE(profile,[  --enable-profile        Produce a profiled executable],  [ELITE_CFLAGS="$ELITE_CFLAGS -pg"; ELITE_CXXFLAGS="$ELITE_CXXFLAGS -pg"])


dnl --------------------------------------------------------------------------
dnl Check if compiling for Win32
dnl --------------------------------------------------------------------------
AC_MSG_CHECKING([for Win32 platform])
AC_EGREP_CPP(yes,
[ 
#if defined(WIN32) || defined(__CYGWIN__)
  yes
#endif
], is_win32=yes, is_win32=no )
AC_MSG_RESULT([$is_win32])

dnl Add libs required for Windows
dnl I don't use -mwindows since I like having the console around
dnl If the console annoys you then remove "-luser32 -lgdi32" and replace
dnl with "-mwindows"
if test "x$is_win32" = "xyes" ; then
    ELITE_LIBS="$ELITE_LIBS -luser32 -lgdi32"
fi


dnl --------------------------------------------------------------------------
dnl Check for SDL
dnl --------------------------------------------------------------------------

    SDL_VERSION=1.0.1
    AM_PATH_SDL($SDL_VERSION, have_SDL=yes, have_SDL=no)

    if test "x$have_SDL" = "xyes" ; then
	ELITE_CPPFLAGS="$ELITE_CPPFLAGS -DHAVE_SDL=1"
	ELITE_CFLAGS="$ELITE_CFLAGS $SDL_CFLAGS"
	ELITE_CXXFLAGS="$ELITE_CXXFLAGS $SDL_CFLAGS"
	ELITE_LIBS="$ELITE_LIBS $SDL_LIBS"

	dnl Check for joystick support in SDL
	saved_LIBS="$LIBS"
	LIBS="$saved_LIBS $ELITE_LIBS"

dnl	AC_CHECK_FUNCS( SDL_JoystickOpen, 
dnl			have_SDL_joystick=yes, have_SDL_joystick=no )

dnl	if test "x$have_SDL_joystick" = "xno" ; then
dnl	    echo "*** This version of SDL doesn't have joystick support."
dnl	    echo "*** Configuring without joystick support."
dnl	fi

	dnl Check for SDL_mixer
	AC_CHECK_LIB( SDL_mixer, Mix_OpenAudio, 
		      have_SDL_mixer=yes, have_SDL_mixer=no )

	if test "x$have_SDL_mixer" = "xyes" ; then 
	    ELITE_CPPFLAGS="$ELITE_CPPFLAGS -DHAVE_SDL_MIXER=1" 
	    ELITE_LIBS="$ELITE_LIBS -lSDL_mixer"
	else
	    echo "*** SDL_mixer not found.  Can't build this program without it!"
	fi

	LIBS="$saved_LIBS"
    else
	echo "*** SDL not found.  Can't build this program without it!"
    fi


dnl --------------------------------------------------------------------------
dnl Check for SMPEG
dnl --------------------------------------------------------------------------
AC_ARG_ENABLE(smpeg,[  --disable-smpeg           Disable detection and use of SMPEG])

if test "x$enable_smpeg" != "xno" ; then

    SMPEG_VERSION=0.3.0
    AM_PATH_SMPEG($SMPEG_VERSION, have_SMPEG=yes, have_SMPEG=no)

    if test "x$have_SMPEG" = "xyes" ; then
	ELITE_CPPFLAGS="$ELITE_CPPFLAGS -DHAVE_SMPEG=1"
	ELITE_CFLAGS="$ELITE_CFLAGS $SMPEG_CFLAGS"
	ELITE_CXXFLAGS="$ELITE_CXXFLAGS $SMPEG_CFLAGS"
	ELITE_LIBS="$ELITE_LIBS $SMPEG_LIBS"
    else
	echo "*** SMPEG not found.  Configuring without mp3 support."
    fi
fi


dnl --------------------------------------------------------------------------
dnl Check for GL library
dnl --------------------------------------------------------------------------
AC_ARG_WITH(gl-libs,      [  --with-gl-libs=DIR      GL/MesaGL library location])
AC_ARG_WITH(gl-lib-name,  [  --with-gl-lib-name=NAME GL library name])

if test "x$with_gl_libs" = "x" ; then
    GL_LDOPTS=""
else
    GL_LDOPTS="-L$with_gl_libs"
fi

saved_LIBS="$LIBS"

AC_DEFUN( CHECK_FOR_GL_LIB, [
    AC_MSG_CHECKING([for $GL_LIB_NAME library])
    LIBS="$saved_LIBS $ELITE_LIBS $GL_LDOPTS -l$GL_LIB_NAME"
    AC_TRY_LINK( , , have_GL=yes, have_GL=no)
    AC_MSG_RESULT([$have_GL])

    if test "x$have_GL" = "xyes" ; then
	ELITE_LIBS="$ELITE_LIBS $GL_LDOPTS -l$GL_LIB_NAME"

    else
	dnl Try with -lpthread

	AC_MSG_CHECKING([for $GL_LIB_NAME library (with pthreads)])
	LIBS="$saved_LIBS $ELITE_LIBS $GL_LDOPTS -l$GL_LIB_NAME -lpthread"
	AC_TRY_LINK( , , have_GL=yes, have_GL=no)
	AC_MSG_RESULT([$have_GL])

	if test "x$have_GL" = "xyes" ; then
	    ELITE_LIBS="$ELITE_LIBS $GL_LDOPTS -l$GL_LIB_NAME -lpthread"
	fi
    fi
])

AC_DEFUN( FIND_GL_LIB, [
    if test "x$with_gl_lib_name" = "x" ; then
        GL_LIB_NAME="GL"
    else
        GL_LIB_NAME="$with_gl_lib_name"
    fi

    CHECK_FOR_GL_LIB

    if test "x$have_GL" = "xno" -a "x$with_gl_lib_name" = "x" ; then
        GL_LIB_LIST=`grep -v -E "^$GL_LIB_NAME\$" <<EOF
GL
MesaGL
opengl32
EOF
`

        for GL_LIB_NAME in $GL_LIB_LIST ; do
            CHECK_FOR_GL_LIB

            if test "x$have_GL" = "xyes" ; then
                break;
            fi
        done
    fi
])

FIND_GL_LIB

if test "x$have_GL" = "xno" -a "x$GL_LDOPTS" = "x" ; then
    echo "*** Hmm, you don't seem to have OpenGL libraries installed in the standard"
    echo "*** location (/usr/lib).  I'll check in /usr/X11R6/lib, since"
    echo "*** many distributions (incorrectly) put OpenGL libs there."
    GL_LDOPTS="-L/usr/X11R6/lib"
    FIND_GL_LIB
fi

if test "x$have_GL" = "xno" ; then
    AC_MSG_ERROR([Cannot find GL library])
fi


LIBS="$saved_LIBS"



dnl --------------------------------------------------------------------------
dnl Check for OpenGL headers
dnl --------------------------------------------------------------------------

AC_ARG_WITH(gl-inc,   [  --with-gl-inc=DIR       OpenGL header file location])

if test "x$with_gl_inc" = "x" ; then
    GL_CPPFLAGS=""
else 
    GL_CPPFLAGS="-I$with_gl_inc"
fi

dnl check for gl.h
saved_CPPFLAGS="$CPPFLAGS"

AC_DEFUN( CHECK_FOR_GL_H, [
    CPPFLAGS="$saved_CPPFLAGS $GL_CPPFLAGS $ELITE_CPPFLAGS"

    AC_MSG_CHECKING([for GL/gl.h])
    AC_TRY_CPP( [ #include <GL/gl.h> ], have_gl_h=yes, have_gl_h=no )
    AC_MSG_RESULT([$have_gl_h])
])

CHECK_FOR_GL_H

if test "x$have_gl_h" = "xno" -a "x$GL_CPPFLAGS" = "x" ; then
    echo "*** Hmm, you don't seem to have OpenGL headers installed in the standard"
    echo "*** location (/usr/include).  I'll check in /usr/X11R6/include, since"
    echo "*** many distributions (incorrectly) put OpenGL headers there."
    GL_CPPFLAGS="-I/usr/X11R6/include"
    CHECK_FOR_GL_H
fi

if test "x$have_gl_h" = "xno" ; then
    AC_MSG_ERROR([Cannot find GL/gl.h])
fi


CPPFLAGS="$saved_CPPFLAGS" 
ELITE_CPPFLAGS="$ELITE_CPPFLAGS $GL_CPPFLAGS"


dnl --------------------------------------------------------------------------
dnl Other options
dnl --------------------------------------------------------------------------





AC_SUBST(ELITE_CPPFLAGS)
AC_SUBST(ELITE_CFLAGS)
AC_SUBST(ELITE_CXXFLAGS)
AC_SUBST(ELITE_LIBS)

CPPFLAGS="$CPPFLAGS $ELITE_CPPFLAGS"
CFLAGS="$CFLAGS $ELITE_CFLAGS"
CXXFLAGS="$CXXFLAGS $ELITE_CXXFLAGS"
LIBS="$LIBS $ELITE_LIBS"

AC_OUTPUT(Makefile src/Makefile)
